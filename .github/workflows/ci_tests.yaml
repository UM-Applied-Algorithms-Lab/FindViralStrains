name: Snakemake CI Pipeline

on:
  push:
    branches:
      - main  # Runs on pushes to the main branch
      - dev-main
  pull_request:
    branches:
      - main  # Runs on pull requests targeting the main branch

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]  # Add other OS options if needed
    steps:
      - uses: actions/checkout@v2

      # Cache Rust dependencies
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('libs/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Set up Rust toolchain
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Run build script
      - run: bash build.sh

      # Install Miniconda
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9

      # Create Conda environment
      - run: |
          eval "$(conda shell.bash hook)"
          eval "$bash build.sh"
          conda env create -f environment.yml
          conda env list
          conda activate Test
          snakemake -s findviralstrains.smk --configfile config_files/build_test.yaml --until Add_super --cores 1 --debug-dag --latency-wait 30
