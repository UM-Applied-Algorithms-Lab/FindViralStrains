name: Snakemake CI Pipeline

on:
  push:
    branches:
      - main  # Runs on pushes to the main branch
      - dev-main
  pull_request:
    branches:
      - main  # Runs on pull requests targeting the main branch

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]  # Add other OS options if needed
    steps:
      - uses: actions/checkout@v2

      # Cache Rust dependencies and toolchain
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
          key: ${{ runner.os }}-rust-${{ hashFiles('libs/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      # Set up Rust toolchain
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Cache Conda environment
      - name: Cache Conda environment
        uses: actions/cache@v3
        with:
          path: ~/.conda/envs/Test
          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      # Install Miniconda
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9


      # Create and activate Conda environment
      - name: Create and activate Conda environment
        run: |
          eval "$(conda shell.bash hook)"
          conda env create --file environment.yml --name Test || conda env update --file environment.yml --name Test
          conda init bash
          eval "$(conda shell.bash hook)"
          conda activate Test

      - name: Build with Cargo
        run: |
          cargo build --release
        
      - name: run snakemake
        run: |
          eval "$(conda shell.bash hook)"
          conda activate Test
          snakemake -s findviralstrains.smk --configfile config_files/build_test.yaml --until Add_super --cores 1 --debug-dag --latency-wait 30
